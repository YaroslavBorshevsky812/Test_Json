{"version":3,"sources":["components/ProductRow.jsx","components/Table.jsx","components/Sidebar.jsx","App.js","redux/actions/cart.js","redux/reducers/cart.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["ProductRow","gid","gname","gprice","onSelectProduct","React","useState","totalPrice","setTotalPrice","value","setValue","type","onChange","e","target","product","id","count","Number","name","console","log","defaultValue","Table","products","useParams","filterProducts","undefined","filter","item","rid","map","index","colSpan","rname","goods","Sidebar","className","to","App","dispatch","useDispatch","setProducts","useSelector","data","cart","cartProducts","items","totalCount","useEffect","fetch","then","resp","json","selectProduct","payload","path","exact","onClick","Object","keys","forEach","formData","serialize","axios","url","method","headers","Accept","initialState","getTotalPrice","reduce","acum","key","getTotalCount","state","action","newItems","rootReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"iRAuCeA,MArCf,YAA8D,IAAxCC,EAAuC,EAAvCA,IAAKC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,gBAAmB,EACrBC,IAAMC,SAAS,GADM,mBAClDC,EADkD,KACtCC,EADsC,OAE/BH,IAAMC,SAAS,GAFgB,mBAElDG,EAFkD,KAE3CC,EAF2C,KAgBzD,OACI,+BACI,6BACKT,IAEL,6BACKC,IAEL,6BACKC,IAEL,6BACI,uBAAOQ,KAAK,SAASC,SAzBZ,SAACC,GAClBH,EAASD,GACTD,EAAcK,EAAEC,OAAOL,MAAQN,GAC/B,IAAMY,EAAU,CACZC,GAAIf,EACJgB,MAAOC,OAAOL,EAAEC,OAAOL,OACvBF,WAAYM,EAAEC,OAAOL,MAAQN,EAC7BgB,KAAMjB,GAEVE,EAAgBW,GAChBK,QAAQC,IAAIN,EAAQE,QAeiCK,aAAcb,MAE/D,6BACKF,QCAFgB,MA7Bf,YAA+C,IAA9BC,EAA6B,EAA7BA,SAAUpB,EAAmB,EAAnBA,gBAChBY,EAAMS,cAANT,GACPI,QAAQC,IAAII,eACZ,IAAIC,EAAiB,GAMrB,OAJIA,OADOC,IAAPX,EACiBQ,EAASI,QAAO,SAAAC,GAAI,OAAIA,EAAKC,MAAQd,KAErCQ,EAGjB,gCACKA,GACGE,EAAeK,KAAI,SAAChB,EAASiB,GAAV,OACf,kCACI,6BACI,oBAAIC,QAAQ,IAAZ,SAAgB,6BAAKlB,EAAQmB,YAG7BnB,EAAQoB,MAAMJ,KAAI,SAAAF,GAAI,OAClB,cAAC,EAAD,2BAA+BA,GAA/B,IAAqCzB,gBAAiBA,IAArCyB,EAAK5B,UANtBc,EAAQe,IAAM,IAAME,S,MCCrCI,MAhBf,YAAgC,IAAbZ,EAAY,EAAZA,SACf,OACI,qBAAKa,UAAU,UAAf,SACI,6BACKb,GACGA,EAASO,KAAI,SAACF,EAAMG,GAAP,OACT,6BACI,cAAC,IAAD,CAAMM,GAAE,WAAMT,EAAKC,KAAnB,SAA2BD,EAAKK,SAD3BL,EAAO,IAAMG,WC4E/BO,MAvEf,WACE,IAAMC,EAAWC,cADJ,EAEmBpC,IAAMC,SAAS,IAFlC,mBAENkB,EAFM,KAEIkB,EAFJ,OAI2CC,aAAY,SAAAC,GAAI,OAAIA,EAAKC,QAAlEC,EAJF,EAILC,MAAqBC,EAJhB,EAIgBA,WAAYzC,EAJ5B,EAI4BA,WAEzCF,IAAM4C,WAAU,WACdC,MAAM,sDACHC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAP,GAAI,OAAIF,EAAYE,QAC3B,IAEH,IAAMxC,EAAkB,SAACkD,GACvBd,ECzBO,CACH7B,KAAM,cACN4C,QDuBeD,KAuBrB,OACE,sBAAKjB,UAAU,MAAf,UACE,sBAAKA,UAAU,YAAf,UACE,cAAC,EAAD,CACEb,SAAUA,IAEZ,eAAC,IAAD,WACE,cAAC,IAAD,CAAOgC,KAAK,aAAaC,OAAK,EAA9B,SACE,cAAC,EAAD,CACEjC,SAAUA,EACVpB,gBAAiBA,MAGrB,cAAC,IAAD,CAAOoD,KAAK,OAAOC,OAAK,EAAxB,SACE,cAAC,EAAD,CACEjC,SAAUA,EACVpB,gBAAiBA,YAMzB,yBAAQiC,UAAU,SAAlB,UACE,oJACyB,+BAAO9B,OAEhC,sIACqB,+BAAOyC,OAE5B,wBAAQU,QAjDM,WAClB,IAAI3C,EAAU,CAAEA,QAAS,IACzB4C,OAAOC,KAAKd,GAAce,SAAQ,SAAAhC,GAChCd,EAAQA,QAAQc,GAAQiB,EAAajB,GAAMZ,SAG7C,IAAM6C,EAAWC,oBAAUhD,GAE3BiD,IAAM,CACJC,IAAK,mDACLC,OAAQ,OACRtB,KAAMkB,EACNK,QAAS,CACPC,OAAQ,mBACR,eAAgB,yBAGjBjB,MAAK,gBAAGP,EAAH,EAAGA,KAAH,OAAcxB,QAAQC,IAAIuB,OAgC9B,uH,wBE9EFyB,EAAe,CACjBtB,MAAO,GACPxC,WAAY,EACZyC,WAAY,GAGVsB,EAAgB,SAAC1B,GACnB,OAAOe,OAAOC,KAAKhB,GAAM2B,QAAO,SAACC,EAAMC,GAAP,OAAe7B,EAAK6B,GAAKlE,WAAaiE,IAAM,IAG1EE,EAAgB,SAAC9B,GACnB,OAAOe,OAAOC,KAAKhB,GAAM2B,QAAO,SAACC,EAAMC,GAAP,OAAe7B,EAAK6B,GAAKxD,MAAQuD,IAAM,IAyB5DhD,EArBE,WAAmC,IAAlCmD,EAAiC,uDAAzBN,EAAcO,EAAW,uCAC/C,OAAQA,EAAOjE,MAEX,IAAK,cAED,IAAMkE,EAAQ,2BACPF,EAAM5B,OADC,kBAET6B,EAAOrB,QAAQvC,GAAK4D,EAAOrB,UAEhC,OAAO,2BACAoB,GADP,IAEI5B,MAAO8B,EACPtE,WAAY+D,EAAcO,GAC1B7B,WAAY0B,EAAcG,KAGlC,QACI,OAAOF,ICxBJG,EAJKC,YAAgB,CAChClC,SCAEmC,EAAmBC,OAAOC,sCAAwCC,IAIzDC,EAFDC,YAAYP,EAAaE,EAAiBM,YAAgBC,OCExEC,IAASC,OACP,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJM,SAASC,eAAe,W","file":"static/js/main.ed7ca1c5.chunk.js","sourcesContent":["import React from 'react'\n\nfunction ProductRow({ gid, gname, gprice, onSelectProduct }) {\n    const [totalPrice, setTotalPrice] = React.useState(0)\n    const [value, setValue] = React.useState(0)\n    const handleChange = (e) => {\n        setValue(value)\n        setTotalPrice(e.target.value * gprice)\n        const product = {\n            id: gid,\n            count: Number(e.target.value),\n            totalPrice: e.target.value * gprice,\n            name: gname\n        }\n        onSelectProduct(product)\n        console.log(product.count);\n    }\n\n    return (\n        <tr>\n            <td>\n                {gid}\n            </td>\n            <td>\n                {gname}\n            </td>\n            <td>\n                {gprice}\n            </td>\n            <td>\n                <input type=\"number\" onChange={handleChange} defaultValue={value}/>\n            </td>\n            <td>\n                {totalPrice}\n            </td>\n        </tr>\n    )\n}\n\nexport default ProductRow\n","import React from 'react'\nimport { useParams } from 'react-router-dom'\nimport ProductRow from './ProductRow'\n\nfunction Table({ products, onSelectProduct }) {\n    const {id} = useParams()\n    console.log(useParams())\n    let filterProducts = []\n    if (id !== undefined) {\n        filterProducts = products.filter(item => item.rid === id)\n    } else {\n        filterProducts = products\n    }\n    return (\n        <table>\n            {products &&\n                filterProducts.map((product, index) =>\n                    <tbody key={product.rid + '_' + index}>\n                        <tr>\n                            <th colSpan=\"5\"><h1>{product.rname}</h1></th>\n                        </tr>\n                        {\n                            product.goods.map(item =>\n                                <ProductRow key={item.gid} {...item} onSelectProduct={onSelectProduct} />\n                            )\n                        }\n                    </tbody>\n                )\n            }\n        </table>\n    )\n}\n\nexport default Table\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nfunction Sidebar({ products }) {\n    return (\n        <div className=\"sidebar\">\n            <ul>\n                {products &&\n                    products.map((item, index) =>\n                        <li key={item + '_' + index}>\n                            <Link to={`/${item.rid}`}>{item.rname}</Link>\n                        </li>\n                    )\n                }\n            </ul>\n        </div>\n    )\n}\n\nexport default Sidebar\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport axios from 'axios'\nimport { Switch, Route } from 'react-router-dom'\nimport { serialize } from 'object-to-formdata';\n\nimport { addToCart } from './redux/actions/cart'\n\nimport Table from './components/Table'\n\nimport './App.css';\nimport Sidebar from './components/Sidebar';\n\nfunction App() {\n  const dispatch = useDispatch()\n  const [products, setProducts] = React.useState([]);\n\n  const { items: cartProducts, totalCount, totalPrice } = useSelector(data => data.cart)\n  \n  React.useEffect(() => {\n    fetch('https://datainlife.ru/junior_task/get_products.php')\n      .then(resp => resp.json())\n      .then(data => setProducts(data))\n  }, [])\n\n  const onSelectProduct = (selectProduct) => {\n    dispatch(addToCart(selectProduct))\n  }\n\n  const handleClick = () => {\n    let product = { product: {} }\n    Object.keys(cartProducts).forEach(item => {\n      product.product[item] = cartProducts[item].count\n    })\n\n    const formData = serialize(product)\n\n    axios({\n      url: 'https://datainlife.ru/junior_task/add_basket.php',\n      method: 'POST',\n      data: formData,\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'multipart/form-data',\n      },\n    })\n      .then(({ data }) => console.log(data))\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <Sidebar\n          products={products}\n        />\n        <Switch>\n          <Route path=\"/Test_Json\" exact>\n            <Table\n              products={products}\n              onSelectProduct={onSelectProduct}\n            />\n          </Route>\n          <Route path=\"/:id\" exact>\n            <Table\n              products={products}\n              onSelectProduct={onSelectProduct}\n            />\n          </Route>\n        </Switch>\n      </div>\n\n      <footer className=\"footer\">\n        <div>\n          Общая сумма за товары: <span>{totalPrice}</span>\n        </div>\n        <div>\n          Общее колличество: <span>{totalCount}</span>\n        </div>\n        <button onClick={handleClick}>Добавить в корзину</button>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n\n\n// https://datainlife.ru/junior_task/get_products.php\n\n// https://datainlife.ru/junior_task/add_basket.php","export const addToCart = (data) => {\n    return {\n        type: \"ADD_TO_CART\",\n        payload: data\n    }\n}\n","const initialState = {\n    items: {},\n    totalPrice: 0,\n    totalCount: 0\n}\n\nconst getTotalPrice = (data) => {\n    return Object.keys(data).reduce((acum, key) => data[key].totalPrice + acum, 0);\n}\n\nconst getTotalCount = (data) => {\n    return Object.keys(data).reduce((acum, key) => data[key].count + acum, 0);\n}\n\n\nconst products = (state = initialState, action) => {\n    switch (action.type) {\n\n        case \"ADD_TO_CART\":\n            \n            const newItems = {\n                ...state.items,\n                [action.payload.id]: action.payload\n            }\n            return {\n                ...state,\n                items: newItems,\n                totalPrice: getTotalPrice(newItems),\n                totalCount: getTotalCount(newItems)\n            }\n\n        default:\n            return state\n    }\n}\n\nexport default products;\n","import { combineReducers } from 'redux'\n\nimport cart from './cart';\n\nconst rootReducer = combineReducers({\n    cart\n})\n\nexport default rootReducer;\n","import { createStore, compose, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\n\nimport rootReducer from './reducers'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux'\nimport './index.css';\nimport App from './App';\n\nimport store from './redux/store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}